A - Agilität

Jeder will sie, nur wenige haben sie. Agilität ist seit Jahren das Stichwort, der fast jeden etablierten Prozess alt aussehen lässt. Nur wer agil ist, ist vorne. Die Sinnhaftigkeit wird selten hinterfragt. Auch vor der IT-Architektur macht das Modewort nicht halt. Für uns als IT-Architekten lautet die Frage also: Wie kann man die Prozesse zur Konstruktion von Softwarelösungen agil machen und ist das überhaupt sinnvoll?

Dazu müssen wir den Modebegriff "Agilität" zunächst einmal zu seinem Ursprung verfolgen, um so zu verstehen, welche grundsätzlichen Ideen dahinter stecken. Und die sind eigentlich ziemlich spannend. Agile Methoden werden grundsätzlich als radikaler Gegenentwurf zu den akribisch vorausplanenden Methoden verstanden. Das rührt von der Erkenntnis her, dass im Bereich der Softwareprojekte viele Anforderungen oft nicht im voraus klar sind oder sich im Laufe der Lösungserstellung verändern. Damit sieht eine  Vorausplanung (z. B. in Form eines Lasten- und Pflichtenhefts) zunächst stimmig aus, das Ergebnis jedoch ist häufig unakzeptabel weit von der Realität der Auftraggebers entfernt. Dann stehen aufwendige Nachbesserungen an, die das Budget sprengen und eventuell sogar das ganze Projekt zum Scheitern bringen. Hört sich das bekannt an? 

Agile Methoden nehmen für sich in Anspruch, dass sie, korrekt angewendet, das oben geschilderte Risiko deutlich verringern können und zwar besonders für lang laufende Initiativen. Aus meiner persönlichen Erfahrung kenne ich viele Initiativen, die mit relativ schwammigen Zielen (“Wir bauen eine moderne IT-Architektur auf ...”) und sehr langen Zeithorizonten (“... in den nächsten drei Jahren”) starten, sodass sie von einem agilen Ansatz profitieren könnten.

Also beschäftigen sich alle mit dem Agilen Manifest, mit Scrum und Kanban und mit Ritualen wie Retrospektive und Backlog-Refinement. Und viele beklagen sich anschließend, dass das alles nicht so richtig passt, oder sogar, dass sie das sowieso schon immer so machen würden.