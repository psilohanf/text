A - Agilität

Jeder will sie, nur wenige haben sie. Agilität ist seit Jahren das Stichwort, das alle etablierten Prozesse in die Überarbeitung treibt. Wer agil ist, ist vorne. Die Sinnhaftigkeit wird nur selten hinterfragt. Auch vor der IT-Architektur macht diese Anforderung nicht halt. Die Frage lautet also: Wie kann man die Prozesse zur Konstruktion von Softwarelösungen agil bekommen?


Dazu müssen wir den Modebegriff "Agilität" zunächst einmal zu seinem Ursprung verfolgen, um so zu verstehen, welche grundsätzlichen Ideen dahinter stecken. Und die sind eigentlich ziemlich spannend. Agile Methoden werden grundsätzlich als Gegenentwurf zu den akribisch vorausplanenden Methoden verstanden. Das rührt von der Erkenntnis her, dass im Bereich der Softwareprojekte Anforderungen oft nicht im voraus klar sind oder sich im Laufe der Lösungserstellung verändern. Damit sieht die Planung stimmig aus, das Ergebnis jedoch ist manchmal unakzeptabel weit von der Einsatzrealität entfernt. Aufwendige Nachbesserungen stehen an, die das Budget sprengen und eventuell sogar das ganze Projekt zum Scheitern bringen. Hört sich das bekannt an? Agile Methoden nehmen für sich in Anspruch, dass sie, korrekt angewendet, dieses Risiko deutlich verringern können und zwar besonders für lang laufende Initiativen. Ich denke, dass im Bereich der IT-Architektur eine Menge Initiativen so langfristig ablaufen, dass sie von einem agilen Ansatz profitieren könnten.


Also beschäftigen sich alle mit dem Agilen Manifest, mit Scrum und Kanban und mit Ritualen wie Retrospektive und Backlog-Refinement. Und viele beklagen sich anschließend, dass das alles nicht so richtig passt, oder sogar, dass sie das sowieso schon immer so machen würden. 